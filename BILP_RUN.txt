> bilp.max <- function(c,A,b,itermax){
+ # Simple Maximizing Binary Integer Linear Programming Code
+ # Uses collapsed dual approach
+ # Standard form: max c'x, subject to Ax <= b, x binary 0 or 1
+ # c n-vector, b m-vector, A m x n matrix
+ # Bob Agnew, raagnew1@gmail.com, raagnew.com
+ m <- length(b)
+ n <- length(c)
+ if (min(b) < 0){
+ stop("Initial Solution of Zeros Infeasible")
+ return}
+ # Collapsed relaxed LP dual minimization function
+ dual <- function(y){sum(b%*%y) + sum(pmax(0,c - y%*%A))}
+ # Optimization of collapsed dual with plain vanilla nonlinear solver
+ opt <- nlminb(rep(0,m),dual,control=list(iter.max=itermax),lower=rep(0,m),upper=Inf)
+ # Optimal dual solution is approximate, close but not exact
+ y <- opt$par
+ v <- c - y%*%A
+ ord <- order(v,decreasing=TRUE)
+ x <- rep(0,n) # Initial solution of zeros
+ # Sequential binary assignments to ensure constraints satisfied
+ for (j in 1:n){
+ x1 <- x
+ k <- ord[j]
+ x1[k] <- 1
+ ifelse(min(b - A%*%x1) >= 0,x[k] <- 1,break)}
+ result <- list(x,cbind(A%*%x,b),as.numeric(c%*%x),opt$objective)
+ names(result) <- c("solution","constraints","maximum","dual_bound")
+ return(result)}
> 
> bilp.min <- function(c,A,b,itermax){
+ # Simple Minimizing Binary Integer Linear Programming Code
+ # Uses collapsed dual approach
+ # Standard form: min c'x, subject to Ax >= b, x binary 0 or 1
+ # c n-vector, b m-vector, A m x n matrix
+ # Bob Agnew, raagnew1@gmail.com, raagnew.com
+ m <- length(b)
+ n <- length(c)
+ if (min(A%*%rep(1,n) - b) < 0){
+ stop("Initial Solution of Ones Infeasible")
+ return}
+ # Negative collapsed relaxed LP dual minimization function
+ dual <- function(y){-sum(b%*%y) + sum(pmax(0,y%*%A - c))}
+ # Optimization of negative collapsed dual with plain vanilla nonlinear solver
+ opt <- nlminb(rep(0,m),dual,control=list(iter.max=itermax),lower=rep(0,m),upper=Inf)
+ # Optimal dual solution is approximate, close but not exact
+ y <- opt$par
+ v <- c - y%*%A
+ ord <- order(v,decreasing=TRUE)
+ x <- rep(1,n) # Initial solution of ones
+ # Sequential binary assignments to ensure constraints satisfied
+ for (j in 1:n){
+ x1 <- x
+ k <- ord[j]
+ x1[k] <- 0
+ ifelse(min(A%*%x1 - b) >= 0,x[k] <- 0,break)}
+ result <- list(x,cbind(A%*%x,b),as.numeric(c%*%x),-opt$objective)
+ names(result) <- c("solution","constraints","minimum","dual_bound")
+ return(result)}
> 
> # Textbook problem
> # max 8*x1 + 11*x2 + 6*x3 + 4*x4
> # subject to:
> # 5*x1 + 7*x2 + 3*x4 <= 14
> # 8*x1 + 4*x3 + 4*x4 <= 12
> # 2*x1 + 10*x2 + 6*x3 + 4*x4 <= 15
> # x1, x2, x3, x4 in {0,1}
> c <- c(8,11,6,4)
> A <- c(5,7,0,3)
> A <- c(A,8,0,4,4)
> A <- c(A,2,10,6,4)
> A <- matrix(A,nrow=3,ncol=4,byrow=TRUE)
> b <- c(14,12,15)
> 
> # bilp.max solution
> result1 <- bilp.max(c,A,b,1000)
> # Binary solution - optimal
> result1$solution
[1] 1 1 0 0
> #constraints satisfied
> result1$constraints
         b
[1,] 12 14
[2,]  8 12
[3,] 12 15
> # Maximal value
> result1$maximum
[1] 19
> # Dual upper bound
> result1$dual_bound
[1] 22
> 
> # lpSolve solution for comparison
> library("lpSolve")
Warning message:
package ‘lpSolve’ was built under R version 4.1.1 
> result2 <- lp("max",c,A,const.dir=rep("<=",3),b,all.bin=TRUE)
> # Binary solution - optimal
> result2$solution
[1] 1 1 0 0
> # Constraints satisfied
> cbind(A%*%result2$solution,b)
         b
[1,] 12 14
[2,]  8 12
[3,] 12 15
> # Maximal value
> result2$objval
[1] 19
> 
> # Another Textbook Problem
> # min 10*x1 + 12*x2 + 12*x3 + 13*x4 + 11*x5
> # + 9*x6 + 7*x7 + 8*x8 + 8*x9
> # subject to:
> # x1 + x2 + x3 + x7 >= 1
> # x3 + x4 + x5 + x8 >= 1
> # x1 + x4 + x6 + x8 >= 1
> # x1 + x2 + x5 + x6 + x9 >= 1
> # x2 + x3 + x4 + x5 + x6 + x9 >= 1
> # x1, x2, x3, x4, x5, x6, x7, x8, x9 in {0,1}
> c <- c(10,12,12,13,11,9,7,8,8)
> A <- c(1,1,1,0,0,0,1,0,0)
> A <- c(A,0,0,1,1,1,0,0,1,0)
> A <- c(A,1,0,0,1,0,1,0,1,0)
> A <- c(A,1,1,0,0,1,1,0,0,1)
> A <- c(A,0,1,1,1,1,1,0,0,1)
> A <- matrix(A,nrow=5,ncol=9,byrow=TRUE)
> b <- rep(1,5)
> 
> # bilp.min solution
> result3 <- bilp.min(c,A,b,1000)
> # Binary solution - suboptimal
> result3$solution
[1] 1 0 1 0 0 0 0 0 0
> # Constraints satisfied
> result3$constraints
       b
[1,] 2 1
[2,] 1 1
[3,] 1 1
[4,] 1 1
[5,] 1 1
> # Minimal value - suboptimal
> result3$minimum
[1] 22
> # Dual lower bound 
> result3$dual_bound
[1] 17.99992
> 
> # lpSolve solution for comparison
> library("lpSolve")
> result4 <- lp("min",c,A,const.dir=rep(">=",5),b,all.bin=TRUE)
> # Binary solution - optimal
> result4$solution
[1] 0 1 0 0 0 0 0 1 0
> # Constraints satisfied exactly
> cbind(A%*%result4$solution,b)
       b
[1,] 1 1
[2,] 1 1
[3,] 1 1
[4,] 1 1
[5,] 1 1
> # Minimal value - optimal
> result4$objval
[1] 20
> 
> # Randomized inputs for large problems
> set.seed(17)
> c <- sample.int(100,50000,replace=TRUE,prob=NULL)
> A <- sample.int(50,5000000,replace=TRUE,prob=NULL)
> A <- matrix(A,nrow=100,ncol=50000,byrow=TRUE)
> b <- sample.int(1250000,100,replace=TRUE,prob=NULL)
> 
> date() #Time
[1] "Wed Mar 16 22:06:14 2022"
> 
> # bilp.max solution
> result5 <- bilp.max(c,A,b,10000)
> # First 100 elements of binary solution
> result5$solution[1:100]
  [1] 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
> # First 100 constraint elements
> cbind((A[1:100,]%*%result5$solution),b[1:100])
        [,1]    [,2]
  [1,] 84879 1207443
  [2,] 88452 1068090
  [3,] 86331  860376
  [4,] 87409  787390
  [5,] 87777  796898
  [6,] 88400  485214
  [7,] 86764  205484
  [8,] 85239  467375
  [9,] 86732  394094
 [10,] 89044  223705
 [11,] 87983  941990
 [12,] 87417 1113499
 [13,] 85986  123105
 [14,] 88257  956362
 [15,] 87066  756130
 [16,] 87916  110484
 [17,] 86563 1057378
 [18,] 86947  925717
 [19,] 86690  773247
 [20,] 86912  580041
 [21,] 86489  323959
 [22,] 87372  420135
 [23,] 87341  267038
 [24,] 88114 1067929
 [25,] 86778  186866
 [26,] 86969 1115325
 [27,] 62592   62633
 [28,] 86285  816764
 [29,] 88611  249225
 [30,] 86572 1175386
 [31,] 87734  325576
 [32,] 88350  239117
 [33,] 41022   41036
 [34,] 87146  567583
 [35,] 88380 1042317
 [36,] 88384 1145624
 [37,] 87101  428070
 [38,] 87798  642118
 [39,] 86467  569329
 [40,] 86280  629096
 [41,] 87141  416950
 [42,] 81933   81973
 [43,] 86956 1099259
 [44,] 86603 1216233
 [45,] 81672   81723
 [46,] 86451  867932
 [47,] 87029  560998
 [48,] 88497  276571
 [49,] 87793  829666
 [50,] 88220  537712
 [51,] 86678  804696
 [52,] 88844 1118936
 [53,] 86947  643278
 [54,] 87757  805611
 [55,] 86858  638903
 [56,] 85144  897952
 [57,] 87517  588377
 [58,] 86396  823700
 [59,] 87524 1012902
 [60,] 81019   81042
 [61,] 88073  135123
 [62,] 88249  118036
 [63,] 87351 1000824
 [64,] 86723  376336
 [65,] 86993  195969
 [66,] 86107  805152
 [67,] 87745 1200795
 [68,] 86978  233551
 [69,] 86813  665916
 [70,] 87184 1063566
 [71,] 86624  726296
 [72,] 87425  120062
 [73,] 87427  359993
 [74,] 87775  400335
 [75,] 46645   46658
 [76,] 85634  971352
 [77,] 88547  456432
 [78,] 86322  492084
 [79,] 86673 1013078
 [80,] 87276  211681
 [81,] 85175  630238
 [82,] 86790 1201330
 [83,] 86415  580122
 [84,] 86898  268724
 [85,] 58968   58993
 [86,] 87155 1111361
 [87,] 87315 1012586
 [88,] 89003  463061
 [89,] 87649  487141
 [90,] 86535 1010890
 [91,] 88155  282843
 [92,] 86315  385544
 [93,] 87681  562580
 [94,] 87225 1148929
 [95,] 86413  592032
 [96,] 86268  864528
 [97,] 88543 1024366
 [98,] 87911  317471
 [99,] 87572  314968
[100,] 88049  420368
> # Constraints satisfied by maximal solution
> sum(A%*%result5$solution <= b)
[1] 100
> # Maximal value - close to dual upper bound
> result5$maximum
[1] 290495
> # Dual upper bound 
> result5$dual_bound
[1] 290594.4
> 
> date() #Time - efficient
[1] "Wed Mar 16 22:10:17 2022"
> 
> # lpSolve solution for comparison - gagged on large problem, just hung for hours
> # library("lpSolve")
> # result6 <- lp("max",c,A,const.dir=rep("<=",100),b,all.bin=TRUE)
> # result6$solution[1:100]
> # result6$objval
> 
> # bilp.min solution
> result7 <- bilp.min(c,A,b,10000)
> # First 100 elements of binary solution
> result7$solution[1:100]
  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1
> # First 100 constraint elements
> cbind((A[1:100,]%*%result7$solution),b[1:100])
          [,1]    [,2]
  [1,] 1207465 1207443
  [2,] 1163444 1068090
  [3,] 1164850  860376
  [4,] 1164559  787390
  [5,] 1170466  796898
  [6,] 1169450  485214
  [7,] 1161208  205484
  [8,] 1166640  467375
  [9,] 1168791  394094
 [10,] 1174279  223705
 [11,] 1166411  941990
 [12,] 1168068 1113499
 [13,] 1169128  123105
 [14,] 1159734  956362
 [15,] 1164688  756130
 [16,] 1159888  110484
 [17,] 1168372 1057378
 [18,] 1163867  925717
 [19,] 1164543  773247
 [20,] 1167385  580041
 [21,] 1167463  323959
 [22,] 1169332  420135
 [23,] 1164368  267038
 [24,] 1171080 1067929
 [25,] 1167153  186866
 [26,] 1165263 1115325
 [27,] 1165437   62633
 [28,] 1161400  816764
 [29,] 1161587  249225
 [30,] 1175392 1175386
 [31,] 1163882  325576
 [32,] 1170509  239117
 [33,] 1168797   41036
 [34,] 1166741  567583
 [35,] 1169346 1042317
 [36,] 1168956 1145624
 [37,] 1162273  428070
 [38,] 1166351  642118
 [39,] 1161831  569329
 [40,] 1167612  629096
 [41,] 1158962  416950
 [42,] 1166186   81973
 [43,] 1166909 1099259
 [44,] 1216248 1216233
 [45,] 1169364   81723
 [46,] 1166655  867932
 [47,] 1169172  560998
 [48,] 1165097  276571
 [49,] 1163110  829666
 [50,] 1166727  537712
 [51,] 1161471  804696
 [52,] 1168052 1118936
 [53,] 1169378  643278
 [54,] 1168462  805611
 [55,] 1164010  638903
 [56,] 1167791  897952
 [57,] 1164806  588377
 [58,] 1165187  823700
 [59,] 1163527 1012902
 [60,] 1167395   81042
 [61,] 1169681  135123
 [62,] 1168318  118036
 [63,] 1165944 1000824
 [64,] 1165673  376336
 [65,] 1170030  195969
 [66,] 1172545  805152
 [67,] 1200801 1200795
 [68,] 1170990  233551
 [69,] 1163164  665916
 [70,] 1166389 1063566
 [71,] 1163639  726296
 [72,] 1167390  120062
 [73,] 1164773  359993
 [74,] 1166383  400335
 [75,] 1171430   46658
 [76,] 1165880  971352
 [77,] 1167142  456432
 [78,] 1166701  492084
 [79,] 1169177 1013078
 [80,] 1160631  211681
 [81,] 1168913  630238
 [82,] 1201356 1201330
 [83,] 1163600  580122
 [84,] 1169855  268724
 [85,] 1168809   58993
 [86,] 1171610 1111361
 [87,] 1164239 1012586
 [88,] 1170392  463061
 [89,] 1163908  487141
 [90,] 1167360 1010890
 [91,] 1169862  282843
 [92,] 1165612  385544
 [93,] 1166382  562580
 [94,] 1162510 1148929
 [95,] 1164743  592032
 [96,] 1169517  864528
 [97,] 1168876 1024366
 [98,] 1167839  317471
 [99,] 1168005  314968
[100,] 1171204  420368
> # Constraints satisfied by minimal solution
> sum(A%*%result7$solution >= b)
[1] 100
> # Minimal value - close to dual lower bound
> result7$minimum
[1] 2169708
> # Dual lower bound 
> result7$dual_bound
[1] 2169637
> 
> date() #Time - efficient
[1] "Wed Mar 16 22:13:28 2022"
> 
