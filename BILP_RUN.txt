> BILP.MAX <- function(c,A,b,itermax){
+ # Simple Maximizing Binary Integer Linear Programming Code
+ # Employs Williamson primal-dual approximation
+ # Primal BILP is relaxed to an LP
+ # Dual LP is solved in collapsed form and provides bound
+ # Primal BILP assignments are by ordered shadow prices
+ # Performs well on large problems
+ # Standard form: max c'x, subject to Ax <= b, x binary 0 or 1
+ # c positive n-vector, b nonnegative m-vector, A m x n matrix
+ # Bob Agnew, raagnew1@gmail.com, raagnew.com
+ m <- length(b)
+ n <- length(c)
+ if (min(b) < 0){
+ stop("Initial Solution of Zeros Infeasible")
+ return}
+ # Collapsed relaxed LP dual minimization function
+ dual <- function(y){sum(b%*%y) + sum(pmax(0,c - y%*%A))}
+ # Optimization of collapsed dual with plain vanilla nonlinear solver
+ opt <- nlminb(rep(0,m),dual,control=list(iter.max=itermax),lower=rep(0,m),upper=Inf)
+ # Optimal dual solution is approximate, close but not exact
+ y <- opt$par
+ z <- c - y%*%A
+ ord <- order(z,decreasing=TRUE) # Ordering by dual-informed shadow prices
+ x <- rep(0,n) # Initial solution of zeros
+ # Ordered sequential binary assignments to ensure feasibility
+ for (j in 1:n){
+ x1 <- x
+ k <- ord[j]
+ x1[k] <- 1
+ ifelse(min(b - A%*%x1) >= 0,x[k] <- 1,break)} # Stop when assignment becomes infeasible
+ result <- list(x,as.numeric(c%*%x),opt$objective,as.numeric(c%*%x)/opt$objective)
+ names(result) <- c("SOLUTION","PRIMAL_BILP_MAX","DUAL_LP_MIN","APPROXIMATION_RATIO")
+ return(result)}
> 
> BILP.MIN <- function(c,A,b,itermax){
+ # Simple Minimizing Binary Integer Linear Programming Code
+ # Employs Williamson primal-dual approximation
+ # Primal BILP is relaxed to an LP
+ # Dual LP is solved in collapsed form and provides bound
+ # Primal BILP assignments are by ordered shadow prices
+ # Performs well on large problems
+ # Standard form: min c'x, subject to Ax >= b, x binary 0 or 1
+ # c positive n-vector, b nonnegative m-vector, A m x n matrix
+ # Bob Agnew, raagnew1@gmail.com, raagnew.com
+ m <- length(b)
+ n <- length(c)
+ if (min(A%*%rep(1,n) - b) < 0){
+ stop("Initial Solution of Ones Infeasible")
+ return}
+ # Negative (for maximization) collapsed relaxed LP dual minimization function
+ dual <- function(y){-sum(b%*%y) + sum(pmax(0,y%*%A - c))}
+ # Optimization of negative collapsed dual with plain vanilla nonlinear solver
+ opt <- nlminb(rep(0,m),dual,control=list(iter.max=itermax),lower=rep(0,m),upper=Inf)
+ # Optimal dual solution is approximate, close but not exact
+ y <- opt$par
+ z <- c - y%*%A
+ ord <- order(z,decreasing=TRUE) # Ordering by dual-informed shadow prices
+ x <- rep(1,n) # Initial solution of ones
+ # Sequential binary assignments to ensure constraints satisfied
+ for (j in 1:n){
+ x1 <- x
+ k <- ord[j]
+ x1[k] <- 0
+ ifelse(min(A%*%x1 - b) >= 0,x[k] <- 0,break)} # Stop when assignment becomes infeasible
+ result <- list(x,as.numeric(c%*%x),-opt$objective,-as.numeric(c%*%x)/opt$objective)
+ names(result) <- c("SOLUTION","PRIMAL_BILP_MIN","DUAL_LP_MAX","APPROXIMATION_RATIO")
+ return(result)}
> 
> # Textbook Problem
> # max 8*x1 + 11*x2 + 6*x3 + 4*x4
> # subject to:
> # 5*x1 + 7*x2 + 3*x4 <= 14
> # 8*x1 + 4*x3 + 4*x4 <= 12
> # 2*x1 + 10*x2 + 6*x3 + 4*x4 <= 15
> # x1, x2, x3, x4 in {0,1}
> c <- c(8,11,6,4)
> A <- c(5,7,0,3)
> A <- c(A,8,0,4,4)
> A <- c(A,2,10,6,4)
> A <- matrix(A,nrow=3,ncol=4,byrow=TRUE)
> b <- c(14,12,15)
> 
> # BILP.MAX Solution
> RESULT1 <- BILP.MAX(c,A,b,1000)
> # Approximate BILP Solution
> RESULT1$SOLUTION
[1] 1 1 0 0
> # Constraints Satisfied
> m <- dim(A)[1]
> df <- data.frame(A%*%RESULT1$SOLUTION,rep(" <= ",m),b)
> names(df) <- c("Ax","","b")
> df
  Ax       b
1 12  <=  14
2  8  <=  12
3 12  <=  15
> # Maximal Primal Value - Optimal
> RESULT1$PRIMAL_BILP_MAX
[1] 19
> # Dual Upper Bound
> RESULT1$DUAL_LP_MIN
[1] 22
> # Approximation Ratio
> RESULT1$APPROXIMATION_RATIO
[1] 0.8636364
> 
> # lpSolve BILP Solution for Comparison
> library("lpSolve")
> RESULT2 <- lp("max",c,A,const.dir=rep("<=",3),b,all.bin=TRUE)
> # Optimal BILP Solution
> RESULT2$solution
[1] 1 1 0 0
> # Constraints Satisfied
> df <- data.frame(A%*%RESULT2$solution,rep(" <= ",m),b)
> names(df) <- c("Ax","","b")
> df
  Ax       b
1 12  <=  14
2  8  <=  12
3 12  <=  15
> # Maximal Primal Value - Optimal
> RESULT2$objval
[1] 19
> 
> # Another Textbook Problem
> # min 10*x1 + 12*x2 + 12*x3 + 13*x4 + 11*x5
> # + 9*x6 + 7*x7 + 8*x8 + 8*x9
> # subject to:
> # x1 + x2 + x3 + x7 >= 1
> # x3 + x4 + x5 + x8 >= 1
> # x1 + x4 + x6 + x8 >= 1
> # x1 + x2 + x5 + x6 + x9 >= 1
> # x2 + x3 + x4 + x5 + x6 + x9 >= 1
> # x1, x2, x3, x4, x5, x6, x7, x8, x9 in {0,1}
> c <- c(10,12,12,13,11,9,7,8,8)
> A <- c(1,1,1,0,0,0,1,0,0)
> A <- c(A,0,0,1,1,1,0,0,1,0)
> A <- c(A,1,0,0,1,0,1,0,1,0)
> A <- c(A,1,1,0,0,1,1,0,0,1)
> A <- c(A,0,1,1,1,1,1,0,0,1)
> A <- matrix(A,nrow=5,ncol=9,byrow=TRUE)
> b <- rep(1,5)
> 
> # BILP.MIN Solution
> RESULT3 <- BILP.MIN(c,A,b,1000)
> # Approximate BILP Solution
> RESULT3$SOLUTION
[1] 0 0 1 0 0 1 0 0 0
> # Constraints Satisfied
> m <- dim(A)[1]
> df <- data.frame(A%*%RESULT3$SOLUTION,rep(" >= ",m),b)
> names(df) <- c("Ax","","b")
> df
  Ax      b
1  1  >=  1
2  1  >=  1
3  1  >=  1
4  1  >=  1
5  2  >=  1
> # Minimal Primal Value - Suboptimal
> RESULT3$PRIMAL_BILP_MIN
[1] 21
> # Dual Lower Bound 
> RESULT3$DUAL_LP_MAX
[1] 17.99994
> # Approximation Ratio
> RESULT3$APPROXIMATION_RATIO
[1] 1.16667
> 
> # lpSolve BILP Solution for Comparison
> library("lpSolve")
> RESULT4 <- lp("min",c,A,const.dir=rep(">=",5),b,all.bin=TRUE)
> # Optimal BILP Solution
> RESULT4$solution
[1] 0 1 0 0 0 0 0 1 0
> # Constraints Satisfied Exactly
> df <- data.frame(A%*%RESULT4$solution,rep(" >= ",m),b)
> names(df) <- c("Ax","","b")
> df
  Ax      b
1  1  >=  1
2  1  >=  1
3  1  >=  1
4  1  >=  1
5  1  >=  1
> # Minimal BILP Value - Optimal
> RESULT4$objval
[1] 20
> 
> # Randomized Inputs for Large Randomized Problems (50K variables, 100 constraints)
> set.seed(17)
> c <- sample.int(100,50000,replace=TRUE,prob=NULL)
> A <- sample.int(50,5000000,replace=TRUE,prob=NULL)
> A <- matrix(A,nrow=100,ncol=50000,byrow=TRUE)
> b <- sample.int(1250000,100,replace=TRUE,prob=NULL)
> 
> date() #Time
[1] "Thu Apr 18 20:55:00 2024"
> 
> # BILP.MAX Solution
> RESULT5 <- BILP.MAX(c,A,b,10000)
> # Approximate BILP Solution (first 1,000 elements)
> RESULT5$SOLUTION[1:1000]
   [1] 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0
 [116] 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [231] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [346] 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
 [461] 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
 [576] 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [691] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
 [806] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [921] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> # Number of Constraints Satisfied
> sum(A%*%RESULT5$SOLUTION <= b)
[1] 100
> # m <- dim(A)[1]
> # df <- data.frame(A%*%RESULT5$SOLUTION,rep(" <= ",m),b)
> # names(df) <- c("Ax","","b")
> # df
> # Maximal Primal Value
> RESULT5$PRIMAL_BILP_MAX
[1] 290441
> # Dual Upper Bound 
> RESULT5$DUAL_LP_MIN
[1] 290594.4
> # Approximation Ratio - Very Close
> RESULT5$APPROXIMATION_RATIO
[1] 0.9994721
> 
> date() #Time - Efficient
[1] "Thu Apr 18 20:59:15 2024"
> 
> # lpSolve BILP Solution for Comparison - gagged on large problem, just hung for hours
> # library("lpSolve")
> # RESULT6 <- lp("max",c,A,const.dir=rep("<=",100),b,all.bin=TRUE)
> # RESULT6$solution
> # RESULT6$objval
> 
> # BILP.MIN Solution
> RESULT7 <- BILP.MIN(c,A,b,10000)
> # Approximate BILP Solution (first 1,000 elements)
> RESULT7$SOLUTION[1:1000]
   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [116] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [231] 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1
 [346] 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [461] 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1
 [576] 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1
 [691] 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [806] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [921] 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
> # Number of Constraints Satisfied
> sum(A%*%RESULT7$SOLUTION >= b)
[1] 100
> # m <- dim(A)[1]
> # df <- data.frame(A%*%RESULT4$solution,rep(" >= ",m),b)
> # names(df) <- c("Ax","","b")
> # df
> # Minimal Primal Value
> RESULT7$PRIMAL_BILP_MIN
[1] 2169800
> # Dual Lower Bound 
> RESULT7$DUAL_LP_MAX
[1] 2169637
> # Approximation Ratio - Very Close
> RESULT7$APPROXIMATION_RATIO
[1] 1.000075
> 
> date() #Time - Efficient
[1] "Thu Apr 18 21:03:00 2024"
> 
> 
>  
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
